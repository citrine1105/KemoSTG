@startuml
title クラス図
package Interface {
	interface Initialization{
		+virtual void Initialize() = 0
		+virtual void Finalize() = 0
	}

	interface Activity {
		+virtual void Update() = 0
		+virtual void Draw() = 0
	}
}

package Figure {
	class Figure {
		#double X
		#double Y
		+void Move(double X, double Y)
		+virtual void Update()
	}

	Initialization <|-- Figure
	Activity <|-- Figure
}

package Dialog {
	enum ButtonState {
		+Off
		+On
		+Hover
	}

	enum DialogIcon {
		+Information
		+Question
		+Exclamation
		+Error
		+Wait
		+None
	}

	class Dialog {
		#std::string Message
		#bool Active
		#void ButtonDraw(std::string Message, ButtonState State)
		+Dialog()
		+Dialog(std::string Text)
		+void Initialize()
		+void Initialize(std::string Message, DialogIcon Icon, DefaultButton)
		+void Finalize()
		+void Show()
		+void Hide()
		+void Update()
		+virtual void Draw()

	}

	class OKDialog {
		#bool Decide
		+void Draw()
	}

	class TimerDialog {
		#Timer Timer
		+void SetHideTime(double Time)
	}

	class YesNoDialog {
		#int Cursor
		+void SetDefaultState()
		+int GetSelectState()
		+void Draw()
	}

	class WordDialog {
		+void Draw()
	}

	class ResolutionChangeDialog {
		+void Draw()
	}

	Initialization <|-- Dialog
	Activity <|-- Dialog
	Dialog <|-- TimerDialog
	Dialog <|-- OKDialog
	Dialog <|-- YesNoDialog
	TimerDialog <|-- WordDialog
	TimerDialog <|-- ResolutionChangeDialog
	YesNoDialog <|-- ResolutionChangeDialog
}

package Timer {
	enum CountMode {
		+CountUp
		+CountDown
		+Loop
	}

	class Timer {
		#int Value
		#int DefaultValue
		#bool Active
		#bool CountDown
		#bool Loop
		+Timer()
		+Timer(int Value)
		+Timer(double Second)
		+Timer(int Value, CountMode CountMode)
		+Timer(double Second, CountMode CountMode)
		+void SetValue(int Value)
		+void SetSecond(double Second)
		+void SetDefaultValue(int Value)
		+void SetCountMode(CountMode Mode)
		+void EnableCountLoop(bool Flag)
		+int GetValue()
		+double GetSecond()
		+int GetDefaultValue()
		+void Start()
		+void Stop()
		+void Reset()
		+void Update()
		+virtual void Draw()
	}

	class BossTimer {
		+void Draw()
	}

	class SelectTimer {
		+void Draw()
		+void Draw(int X, int Y)
	}

	Activity <|-- Timer
	Timer <|-- BossTimer
	Timer <|-- SelectTimer
}

package Pad {
	enum ButtonAssign {
		Shot
		Bomb
		Laser
		Possess
		TotalNum
	}

	enum DirectInputDPadAssign {
		XAxis
		YAxis
		ZAxis
		XRota
		YRota
		ZRota
		POV1
		POV2
		POV3
		POV4
	}

	enum XInputDPadAssign {
		LeftStick
		RightStick
		DPad
	}

	class Pad {
		#int PadNumber
		#int XInputButtonAssign[TotalNum]
		#int DirectInputButtonAssign[TotalNum]
		+void SetButtonAssign(ButtonAssign Assign)
		+void Initialize()
		+void Finalize()
		+void Update()
		+void Draw()
	}

	Initialization <|-- Pad
	Activity <|-- Pad
}

package Player {
	class Player {
		#Timer InvincibleTime
		+void Initialize()
		+void Finalize()
		+void Update()
		+void Draw()
	}

	Figure <|-- Player
}

package Enemy {
	class Enemy {
		#int HP
		#Timer Timer
	}

	class BossEnemy {
		#BossTimer Timer
	}

	Figure <|-- Enemy
	Enemy <|-- BossEnemy
}

package Bullet {
	enum PlayerBulletType {

	}

	enum EnemyBulletType {

	}

	class Bullet {
		#double Angle
		#double Speed
		+void Update()
	}

	class PlayerBullet {
		+void Draw()
	}

	class EnemyBullet {
		+void Draw()
	}

	Figure <|-- Bullet
	Bullet <|-- PlayerBullet
	Bullet <|-- EnemyBullet
}

package Scene {
	class Scene {
		#Timer FrameTimer
		#Pad Pad[2]
		+virtual void Update()
		+virtual void Draw()
	}

	class Game {
		#Player Player
		+virtual void Update()
		+virtual void Draw()
	}

	Scene <|-- Game
	Scene <|-- Title
	Scene <|-- Menu
	Scene <|-- Option
	Game <|-- ArcadeGame
	Game <|-- NoviceGame
	Game <|-- BossRushGame
	Initialization <|-- Scene
	Activity <|-- Scene
}

package StringResource {
	enum Language {
		+Japanese
		+English
	}

	class StringResource {
		#std::string String
		+std::string SetString(Language Language, char *String)
		+std::string GetString()
		+std::string GetString(Language Language)
		+void Initialize()
		+void Finalize()
	}

	Initialization <|-- StringResource
}
@enduml